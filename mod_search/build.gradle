plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk rootProject.android.compileSdk

    defaultConfig {
        minSdk rootProject.android.minSdk
        targetSdk rootProject.android.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        //ARouter
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    namespace 'com.sum.search'
}

dependencies {

    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly rootProject.depsLibs.coreKtx
    compileOnly rootProject.depsLibs.appcompat
    compileOnly rootProject.depsLibs.material
    compileOnly rootProject.depsLibs.constraintlayout
    compileOnly rootProject.depsLibs.liveDataKtx
    compileOnly rootProject.depsLibs.viewModelKtx

    testCompileOnly rootProject.depsLibs.junit
    androidTestCompileOnly rootProject.depsLibs.extJunit
    androidTestCompileOnly rootProject.depsLibs.espressoCore

    compileOnly rootProject.depsLibs.gson
    compileOnly rootProject.depsLibs.flexbox
    compileOnly rootProject.depsLibs.mmkv

    compileOnly rootProject.depsLibs.refreshLayout
    compileOnly rootProject.depsLibs.refreshHeader
    compileOnly rootProject.depsLibs.refreshFooter

    compileOnly rootProject.depsLibs.aroutreApi
    kapt rootProject.depsLibs.arouterCompiler

    compileOnly project(path: ':lib_framework')
    compileOnly project(path: ':lib_common')
    compileOnly project(path: ':lib_network')
    compileOnly project(path: ':lib_glide')
}